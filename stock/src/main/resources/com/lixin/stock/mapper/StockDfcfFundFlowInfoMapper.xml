<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lixin.stock.mapper.StockDfcfFundFlowInfoMapper">
    <resultMap id="BaseResultMap" type="com.lixin.stock.model.StockDfcfFundFlowInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="stock_market" jdbcType="VARCHAR" property="stockMarket"/>
        <result column="stock_rank" jdbcType="VARCHAR" property="stockRank"/>
        <result column="stock_code" jdbcType="VARCHAR" property="stockCode"/>
        <result column="stock_name" jdbcType="VARCHAR" property="stockName"/>
        <result column="price_new" jdbcType="DECIMAL" property="priceNew"/>
        <result column="stock_change" jdbcType="DECIMAL" property="stockChange"/>
        <result column="main_net_inflow_amount" jdbcType="DECIMAL" property="mainNetInflowAmount"/>
        <result column="main_net_proportion" jdbcType="DECIMAL" property="mainNetProportion"/>
        <result column="super_big_part_net_inFlow_amount" jdbcType="DECIMAL" property="superBigPartNetInflowAmount"/>
        <result column="super_big_part_net_proportion" jdbcType="DECIMAL" property="superBigPartNetProportion"/>
        <result column="big_part_net_inFlow_amount" jdbcType="DECIMAL" property="bigPartNetInflowAmount"/>
        <result column="big_part_net_proportion" jdbcType="DECIMAL" property="bigPartNetProportion"/>
        <result column="middle_part_net_inFlow_amount" jdbcType="DECIMAL" property="middlePartNetInflowAmount"/>
        <result column="middle_part_net_proportion" jdbcType="DECIMAL" property="middlePartNetProportion"/>
        <result column="litter_part_net_inFlow_amount" jdbcType="DECIMAL" property="litterPartNetInflowAmount"/>
        <result column="litter_part_net_proportion" jdbcType="DECIMAL" property="litterPartNetProportion"/>
        <result column="stock_page" jdbcType="INTEGER" property="stockPage"/>
        <result column="count_time" jdbcType="TIMESTAMP" property="countTime"/>
        <result column="time_version" jdbcType="VARCHAR" property="timeVersion"/>
        <result column="crawler_version" jdbcType="VARCHAR" property="crawlerVersion"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lixin.stock.model.StockDfcfFundFlowInfo">
        <result column="someInfo" jdbcType="LONGVARCHAR" property="someinfo"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, stock_market, stock_rank, stock_code, stock_name, price_new, stock_change, main_net_inflow_amount,
    main_net_proportion, super_big_part_net_inFlow_amount, super_big_part_net_proportion,
    big_part_net_inFlow_amount, big_part_net_proportion, middle_part_net_inFlow_amount,
    middle_part_net_proportion, litter_part_net_inFlow_amount, litter_part_net_proportion,
    stock_page, count_time, time_version, crawler_version, create_time, update_time
    </sql>
    <sql id="Blob_Column_List">
        someInfo
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfoExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from stock_dfcf_fund_flow_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfoExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stock_dfcf_fund_flow_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from stock_dfcf_fund_flow_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from stock_dfcf_fund_flow_info
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfoExample">
        delete from stock_dfcf_fund_flow_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into stock_dfcf_fund_flow_info (stock_market, stock_rank, stock_code,
        stock_name, price_new, stock_change,
        main_net_inflow_amount, main_net_proportion,
        super_big_part_net_inFlow_amount, super_big_part_net_proportion,
        big_part_net_inFlow_amount, big_part_net_proportion,
        middle_part_net_inFlow_amount, middle_part_net_proportion,
        litter_part_net_inFlow_amount, litter_part_net_proportion,
        stock_page, count_time, time_version,
        crawler_version, create_time, update_time,
        someInfo)
        values (#{stockMarket,jdbcType=VARCHAR}, #{stockRank,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR},
        #{stockName,jdbcType=VARCHAR}, #{priceNew,jdbcType=DECIMAL}, #{stockChange,jdbcType=DECIMAL},
        #{mainNetInflowAmount,jdbcType=DECIMAL}, #{mainNetProportion,jdbcType=DECIMAL},
        #{superBigPartNetInflowAmount,jdbcType=DECIMAL}, #{superBigPartNetProportion,jdbcType=DECIMAL},
        #{bigPartNetInflowAmount,jdbcType=DECIMAL}, #{bigPartNetProportion,jdbcType=DECIMAL},
        #{middlePartNetInflowAmount,jdbcType=DECIMAL}, #{middlePartNetProportion,jdbcType=DECIMAL},
        #{litterPartNetInflowAmount,jdbcType=DECIMAL}, #{litterPartNetProportion,jdbcType=DECIMAL},
        #{stockPage,jdbcType=INTEGER}, #{countTime,jdbcType=TIMESTAMP}, #{timeVersion,jdbcType=VARCHAR},
        #{crawlerVersion,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{someinfo,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into stock_dfcf_fund_flow_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stockMarket != null">
                stock_market,
            </if>
            <if test="stockRank != null">
                stock_rank,
            </if>
            <if test="stockCode != null">
                stock_code,
            </if>
            <if test="stockName != null">
                stock_name,
            </if>
            <if test="priceNew != null">
                price_new,
            </if>
            <if test="stockChange != null">
                stock_change,
            </if>
            <if test="mainNetInflowAmount != null">
                main_net_inflow_amount,
            </if>
            <if test="mainNetProportion != null">
                main_net_proportion,
            </if>
            <if test="superBigPartNetInflowAmount != null">
                super_big_part_net_inFlow_amount,
            </if>
            <if test="superBigPartNetProportion != null">
                super_big_part_net_proportion,
            </if>
            <if test="bigPartNetInflowAmount != null">
                big_part_net_inFlow_amount,
            </if>
            <if test="bigPartNetProportion != null">
                big_part_net_proportion,
            </if>
            <if test="middlePartNetInflowAmount != null">
                middle_part_net_inFlow_amount,
            </if>
            <if test="middlePartNetProportion != null">
                middle_part_net_proportion,
            </if>
            <if test="litterPartNetInflowAmount != null">
                litter_part_net_inFlow_amount,
            </if>
            <if test="litterPartNetProportion != null">
                litter_part_net_proportion,
            </if>
            <if test="stockPage != null">
                stock_page,
            </if>
            <if test="countTime != null">
                count_time,
            </if>
            <if test="timeVersion != null">
                time_version,
            </if>
            <if test="crawlerVersion != null">
                crawler_version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="someinfo != null">
                someInfo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stockMarket != null">
                #{stockMarket,jdbcType=VARCHAR},
            </if>
            <if test="stockRank != null">
                #{stockRank,jdbcType=VARCHAR},
            </if>
            <if test="stockCode != null">
                #{stockCode,jdbcType=VARCHAR},
            </if>
            <if test="stockName != null">
                #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="priceNew != null">
                #{priceNew,jdbcType=DECIMAL},
            </if>
            <if test="stockChange != null">
                #{stockChange,jdbcType=DECIMAL},
            </if>
            <if test="mainNetInflowAmount != null">
                #{mainNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="mainNetProportion != null">
                #{mainNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="superBigPartNetInflowAmount != null">
                #{superBigPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="superBigPartNetProportion != null">
                #{superBigPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="bigPartNetInflowAmount != null">
                #{bigPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="bigPartNetProportion != null">
                #{bigPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="middlePartNetInflowAmount != null">
                #{middlePartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="middlePartNetProportion != null">
                #{middlePartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="litterPartNetInflowAmount != null">
                #{litterPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="litterPartNetProportion != null">
                #{litterPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="stockPage != null">
                #{stockPage,jdbcType=INTEGER},
            </if>
            <if test="countTime != null">
                #{countTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeVersion != null">
                #{timeVersion,jdbcType=VARCHAR},
            </if>
            <if test="crawlerVersion != null">
                #{crawlerVersion,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="someinfo != null">
                #{someinfo,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfoExample"
            resultType="java.lang.Long">
        select count(*) from stock_dfcf_fund_flow_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update stock_dfcf_fund_flow_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.stockMarket != null">
                stock_market = #{record.stockMarket,jdbcType=VARCHAR},
            </if>
            <if test="record.stockRank != null">
                stock_rank = #{record.stockRank,jdbcType=VARCHAR},
            </if>
            <if test="record.stockCode != null">
                stock_code = #{record.stockCode,jdbcType=VARCHAR},
            </if>
            <if test="record.stockName != null">
                stock_name = #{record.stockName,jdbcType=VARCHAR},
            </if>
            <if test="record.priceNew != null">
                price_new = #{record.priceNew,jdbcType=DECIMAL},
            </if>
            <if test="record.stockChange != null">
                stock_change = #{record.stockChange,jdbcType=DECIMAL},
            </if>
            <if test="record.mainNetInflowAmount != null">
                main_net_inflow_amount = #{record.mainNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.mainNetProportion != null">
                main_net_proportion = #{record.mainNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="record.superBigPartNetInflowAmount != null">
                super_big_part_net_inFlow_amount = #{record.superBigPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.superBigPartNetProportion != null">
                super_big_part_net_proportion = #{record.superBigPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="record.bigPartNetInflowAmount != null">
                big_part_net_inFlow_amount = #{record.bigPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.bigPartNetProportion != null">
                big_part_net_proportion = #{record.bigPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="record.middlePartNetInflowAmount != null">
                middle_part_net_inFlow_amount = #{record.middlePartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.middlePartNetProportion != null">
                middle_part_net_proportion = #{record.middlePartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="record.litterPartNetInflowAmount != null">
                litter_part_net_inFlow_amount = #{record.litterPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.litterPartNetProportion != null">
                litter_part_net_proportion = #{record.litterPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="record.stockPage != null">
                stock_page = #{record.stockPage,jdbcType=INTEGER},
            </if>
            <if test="record.countTime != null">
                count_time = #{record.countTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.timeVersion != null">
                time_version = #{record.timeVersion,jdbcType=VARCHAR},
            </if>
            <if test="record.crawlerVersion != null">
                crawler_version = #{record.crawlerVersion,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.someinfo != null">
                someInfo = #{record.someinfo,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update stock_dfcf_fund_flow_info
        set id = #{record.id,jdbcType=BIGINT},
        stock_market = #{record.stockMarket,jdbcType=VARCHAR},
        stock_rank = #{record.stockRank,jdbcType=VARCHAR},
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
        stock_name = #{record.stockName,jdbcType=VARCHAR},
        price_new = #{record.priceNew,jdbcType=DECIMAL},
        stock_change = #{record.stockChange,jdbcType=DECIMAL},
        main_net_inflow_amount = #{record.mainNetInflowAmount,jdbcType=DECIMAL},
        main_net_proportion = #{record.mainNetProportion,jdbcType=DECIMAL},
        super_big_part_net_inFlow_amount = #{record.superBigPartNetInflowAmount,jdbcType=DECIMAL},
        super_big_part_net_proportion = #{record.superBigPartNetProportion,jdbcType=DECIMAL},
        big_part_net_inFlow_amount = #{record.bigPartNetInflowAmount,jdbcType=DECIMAL},
        big_part_net_proportion = #{record.bigPartNetProportion,jdbcType=DECIMAL},
        middle_part_net_inFlow_amount = #{record.middlePartNetInflowAmount,jdbcType=DECIMAL},
        middle_part_net_proportion = #{record.middlePartNetProportion,jdbcType=DECIMAL},
        litter_part_net_inFlow_amount = #{record.litterPartNetInflowAmount,jdbcType=DECIMAL},
        litter_part_net_proportion = #{record.litterPartNetProportion,jdbcType=DECIMAL},
        stock_page = #{record.stockPage,jdbcType=INTEGER},
        count_time = #{record.countTime,jdbcType=TIMESTAMP},
        time_version = #{record.timeVersion,jdbcType=VARCHAR},
        crawler_version = #{record.crawlerVersion,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        someInfo = #{record.someinfo,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update stock_dfcf_fund_flow_info
        set id = #{record.id,jdbcType=BIGINT},
        stock_market = #{record.stockMarket,jdbcType=VARCHAR},
        stock_rank = #{record.stockRank,jdbcType=VARCHAR},
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
        stock_name = #{record.stockName,jdbcType=VARCHAR},
        price_new = #{record.priceNew,jdbcType=DECIMAL},
        stock_change = #{record.stockChange,jdbcType=DECIMAL},
        main_net_inflow_amount = #{record.mainNetInflowAmount,jdbcType=DECIMAL},
        main_net_proportion = #{record.mainNetProportion,jdbcType=DECIMAL},
        super_big_part_net_inFlow_amount = #{record.superBigPartNetInflowAmount,jdbcType=DECIMAL},
        super_big_part_net_proportion = #{record.superBigPartNetProportion,jdbcType=DECIMAL},
        big_part_net_inFlow_amount = #{record.bigPartNetInflowAmount,jdbcType=DECIMAL},
        big_part_net_proportion = #{record.bigPartNetProportion,jdbcType=DECIMAL},
        middle_part_net_inFlow_amount = #{record.middlePartNetInflowAmount,jdbcType=DECIMAL},
        middle_part_net_proportion = #{record.middlePartNetProportion,jdbcType=DECIMAL},
        litter_part_net_inFlow_amount = #{record.litterPartNetInflowAmount,jdbcType=DECIMAL},
        litter_part_net_proportion = #{record.litterPartNetProportion,jdbcType=DECIMAL},
        stock_page = #{record.stockPage,jdbcType=INTEGER},
        count_time = #{record.countTime,jdbcType=TIMESTAMP},
        time_version = #{record.timeVersion,jdbcType=VARCHAR},
        crawler_version = #{record.crawlerVersion,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfo">
        update stock_dfcf_fund_flow_info
        <set>
            <if test="stockMarket != null">
                stock_market = #{stockMarket,jdbcType=VARCHAR},
            </if>
            <if test="stockRank != null">
                stock_rank = #{stockRank,jdbcType=VARCHAR},
            </if>
            <if test="stockCode != null">
                stock_code = #{stockCode,jdbcType=VARCHAR},
            </if>
            <if test="stockName != null">
                stock_name = #{stockName,jdbcType=VARCHAR},
            </if>
            <if test="priceNew != null">
                price_new = #{priceNew,jdbcType=DECIMAL},
            </if>
            <if test="stockChange != null">
                stock_change = #{stockChange,jdbcType=DECIMAL},
            </if>
            <if test="mainNetInflowAmount != null">
                main_net_inflow_amount = #{mainNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="mainNetProportion != null">
                main_net_proportion = #{mainNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="superBigPartNetInflowAmount != null">
                super_big_part_net_inFlow_amount = #{superBigPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="superBigPartNetProportion != null">
                super_big_part_net_proportion = #{superBigPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="bigPartNetInflowAmount != null">
                big_part_net_inFlow_amount = #{bigPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="bigPartNetProportion != null">
                big_part_net_proportion = #{bigPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="middlePartNetInflowAmount != null">
                middle_part_net_inFlow_amount = #{middlePartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="middlePartNetProportion != null">
                middle_part_net_proportion = #{middlePartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="litterPartNetInflowAmount != null">
                litter_part_net_inFlow_amount = #{litterPartNetInflowAmount,jdbcType=DECIMAL},
            </if>
            <if test="litterPartNetProportion != null">
                litter_part_net_proportion = #{litterPartNetProportion,jdbcType=DECIMAL},
            </if>
            <if test="stockPage != null">
                stock_page = #{stockPage,jdbcType=INTEGER},
            </if>
            <if test="countTime != null">
                count_time = #{countTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeVersion != null">
                time_version = #{timeVersion,jdbcType=VARCHAR},
            </if>
            <if test="crawlerVersion != null">
                crawler_version = #{crawlerVersion,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="someinfo != null">
                someInfo = #{someinfo,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfo">
        update stock_dfcf_fund_flow_info
        set stock_market                     = #{stockMarket,jdbcType=VARCHAR},
            stock_rank                       = #{stockRank,jdbcType=VARCHAR},
            stock_code                       = #{stockCode,jdbcType=VARCHAR},
            stock_name                       = #{stockName,jdbcType=VARCHAR},
            price_new                        = #{priceNew,jdbcType=DECIMAL},
            stock_change                     = #{stockChange,jdbcType=DECIMAL},
            main_net_inflow_amount           = #{mainNetInflowAmount,jdbcType=DECIMAL},
            main_net_proportion              = #{mainNetProportion,jdbcType=DECIMAL},
            super_big_part_net_inFlow_amount = #{superBigPartNetInflowAmount,jdbcType=DECIMAL},
            super_big_part_net_proportion    = #{superBigPartNetProportion,jdbcType=DECIMAL},
            big_part_net_inFlow_amount       = #{bigPartNetInflowAmount,jdbcType=DECIMAL},
            big_part_net_proportion          = #{bigPartNetProportion,jdbcType=DECIMAL},
            middle_part_net_inFlow_amount    = #{middlePartNetInflowAmount,jdbcType=DECIMAL},
            middle_part_net_proportion       = #{middlePartNetProportion,jdbcType=DECIMAL},
            litter_part_net_inFlow_amount    = #{litterPartNetInflowAmount,jdbcType=DECIMAL},
            litter_part_net_proportion       = #{litterPartNetProportion,jdbcType=DECIMAL},
            stock_page                       = #{stockPage,jdbcType=INTEGER},
            count_time                       = #{countTime,jdbcType=TIMESTAMP},
            time_version                     = #{timeVersion,jdbcType=VARCHAR},
            crawler_version                  = #{crawlerVersion,jdbcType=VARCHAR},
            create_time                      = #{createTime,jdbcType=TIMESTAMP},
            update_time                      = #{updateTime,jdbcType=TIMESTAMP},
            someInfo                         = #{someinfo,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lixin.stock.model.StockDfcfFundFlowInfo">
        update stock_dfcf_fund_flow_info
        set stock_market                     = #{stockMarket,jdbcType=VARCHAR},
            stock_rank                       = #{stockRank,jdbcType=VARCHAR},
            stock_code                       = #{stockCode,jdbcType=VARCHAR},
            stock_name                       = #{stockName,jdbcType=VARCHAR},
            price_new                        = #{priceNew,jdbcType=DECIMAL},
            stock_change                     = #{stockChange,jdbcType=DECIMAL},
            main_net_inflow_amount           = #{mainNetInflowAmount,jdbcType=DECIMAL},
            main_net_proportion              = #{mainNetProportion,jdbcType=DECIMAL},
            super_big_part_net_inFlow_amount = #{superBigPartNetInflowAmount,jdbcType=DECIMAL},
            super_big_part_net_proportion    = #{superBigPartNetProportion,jdbcType=DECIMAL},
            big_part_net_inFlow_amount       = #{bigPartNetInflowAmount,jdbcType=DECIMAL},
            big_part_net_proportion          = #{bigPartNetProportion,jdbcType=DECIMAL},
            middle_part_net_inFlow_amount    = #{middlePartNetInflowAmount,jdbcType=DECIMAL},
            middle_part_net_proportion       = #{middlePartNetProportion,jdbcType=DECIMAL},
            litter_part_net_inFlow_amount    = #{litterPartNetInflowAmount,jdbcType=DECIMAL},
            litter_part_net_proportion       = #{litterPartNetProportion,jdbcType=DECIMAL},
            stock_page                       = #{stockPage,jdbcType=INTEGER},
            count_time                       = #{countTime,jdbcType=TIMESTAMP},
            time_version                     = #{timeVersion,jdbcType=VARCHAR},
            crawler_version                  = #{crawlerVersion,jdbcType=VARCHAR},
            create_time                      = #{createTime,jdbcType=TIMESTAMP},
            update_time                      = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
